apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: default
  # Labels are arbitrary key-values that are applied to all nodes
  labels:
    karpenter.nodepool: default
  # Annotations are arbitrary key-values that are applied to all nodes
  annotations:
    karpenter.nodepool: default
spec:
  template:
    spec:
      nodeClassRef:
        kind: EC2NodeClass
        name: default
        group: karpenter.k8s.aws
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["c", "m", "r"]
        - key: karpenter.k8s.aws/instance-generation
          operator: Gt
          values: ["2"]
        - key: "topology.kubernetes.io/zone"
          operator: In
          values: ${availability_zones}
      expireAfter: 720h # 30 * 24h = 720h

  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 300s

  limits:
    cpu: 1000